"Valida los tipos de nivel"
enum Level{
  principiante
  intermedio
  avanzado
}

union GlobalSearch = Course | Student | Monitor

type Course{
  _id: ID!
  title: String!
  teacher: String
  description: String!
  students: [Student]
  level: Level
}

input CourseInput{
  title: String!
  teacher: String
  description: String!
  level: Level
}

input CourseEditInput{
  title: String
  teacher: String
  description: String
}

input PersonInput{
  nombre: String!
  email: String!
  avatar: String
  phone: String
}

input PersonEditInput{
  nombre: String
  email: String
  avatar: String
  phone: String
}

interface Person{
  _id: ID!
  nombre: String
  email: String
}

type Student implements Person{
  _id: ID!
  nombre: String!
  email: String!
  avatar: String
}

type Monitor implements Person{
  _id: ID!
  nombre: String!
  email: String!
  phone: String
}

type Query{
  "Devuelve todos los cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(_id: ID!): Course
  "Devuelve todos los estudiantes"
  getPersons: [Person]
  "Devuelve un curso"
  getPerson(_id: ID!): Person
  "Ejecuta una busqueda global"
  searchItems(keyword: String!): [GlobalSearch]
}

type Mutation{
  "Crea un curso"
  createCourse(input: CourseInput!): Course
  "Edita un curso"
  editCourse(_id: ID!, input: CourseEditInput!): Course
  "Crea un estudiante"
  createPerson(input: PersonInput!): Person
  "Edita un estudiante"
  editPerson(_id: ID!, input: PersonEditInput!): Person
  "Agrega estiduante a un curso"
  addStudentToCourse(courseID: ID!, studentID: ID!): Course
}
